{"version":3,"file":"static/js/278.e40e25cb.chunk.js","mappings":"sNAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yEAKRE,EAAOF,EAAAA,GAAAA,IAAH,0QAcJG,EAAQH,EAAAA,GAAAA,IAAH,sHAQLI,EAAgBJ,EAAAA,GAAAA,IAAH,wJAQbK,EAAQL,EAAAA,GAAAA,EAAH,iHAOLM,EAASN,EAAAA,GAAAA,EAAH,mF,uCCNnB,EAjCkB,SAAC,GAAqC,IAAD,EAAlCO,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAChCC,EAAQ,mDAAqCH,UAArC,QAA8C,mBACtDI,GAAWC,EAAAA,EAAAA,MAEjB,OACI,UAACX,EAAD,YACI,UAACH,EAAD,CAAUe,GAAE,kBAAaP,GAAWQ,MAAO,CAAEC,KAAMJ,GAAnD,WACI,SAACT,EAAD,CAAOK,IACHA,EACMG,EACAM,EAENC,IAAKT,KACT,UAACL,EAAD,YACI,SAACC,EAAD,UAAQI,KACR,UAACH,EAAD,sBAAiBI,YAGzB,SAAC,EAAAS,SAAD,CAAUC,UAAU,6CAApB,UACI,SAAC,KAAD,QAIf,EC3BYC,EAAOrB,EAAAA,GAAAA,GAAH,sNCoCjB,EAjCgB,SAAC,GAAgB,IAAdsB,EAAa,EAAbA,OACf,OACI,SAACD,EAAD,UAEQC,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,kBAAmBhB,EAA1B,EAA0BA,MAAOiB,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,YAAaC,EAA5D,EAA4DA,aAA5D,OACP,SAAC,EAAD,CAEIrB,QAASiB,EACThB,IAAKmB,EACLlB,MAAOA,EACPoB,SAAUJ,EACVf,OAAQgB,EACRI,QAASF,GANJJ,EAFF,KAc1B,C,6KCrBYO,EAAY/B,EAAAA,GAAAA,IAAH,sJAQTgC,EAAOhC,EAAAA,GAAAA,KAAH,2HAOJiC,EAAcjC,EAAAA,GAAAA,MAAH,oMAWXkC,EAAmBlC,EAAAA,GAAAA,OAAH,oZ,SCR7B,EAjBmB,SAAC,GAAkB,IAAhBmC,EAAe,EAAfA,SAClB,OACI,SAACJ,EAAD,WACI,UAACC,EAAD,CAAMG,SAAUA,EAAhB,WACI,SAACF,EAAD,CACIG,KAAK,OACLC,KAAK,WAET,SAACH,EAAD,CAAkBE,KAAK,SAAvB,UACI,SAAC,MAAD,CAAUE,KAAM,WAMnC,E,0DChBYP,EAAY/B,EAAAA,GAAAA,QAAH,+EAKTG,EAAQH,EAAAA,GAAAA,IAAH,4FCKlB,EAT6B,WACzB,OACI,SAAC,EAAD,WACI,SAACG,EAAD,CAAOK,IAAK+B,EAAYrB,IAAI,gBAIvC,E,8BCRYsB,EAAUxC,EAAAA,GAAAA,KAAH,iGCuGpB,EA/Fe,WAAO,IAAD,EACjB,GAA4ByC,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeoB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMpC,GAAQ,UAACmC,EAAaE,IAAI,gBAAlB,QAA8B,IAAIC,QAEhDC,EAAAA,EAAAA,YAAU,WAAM,wCAIZ,WAAyBvC,GAAzB,qGAE2BwC,EAAAA,EAAAA,IAAmBxC,GAF9C,UAEcyC,EAFd,OAKmC,KAFrBC,EAAcD,EAAKE,SAETC,OALxB,uBAMYC,IANZ,0BAUcC,EAAeJ,EAAYK,MAAK,SAACC,EAAYC,GAAb,OAClCA,EAAYhC,aAAe+B,EAAW/B,YADJ,IAItCgB,EAAUa,GAdlB,kDAgBQI,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAY,mBAAoB,CAAEC,SAAU,MAjBpD,0DAJY,wBACE,KAAVrD,IACJiC,EAAU,IAFE,oCAyBZqB,CAAUtD,GAGb,GAAE,CAACA,IAGJ,IAgBMuD,EAAe,YACjBH,EAAAA,EAAAA,IAAM,8BAA+B,CACjCI,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SAEd,EAEKnB,EAAa,YACfO,EAAAA,EAAAA,IAAM,4DAA6D,CAC/DI,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SAEd,EAGD,OACI,UAACjC,EAAD,YACI,SAAC,EAAD,CACIL,SA9CS,SAACuC,GAClBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cACTC,EAAcF,EAAKG,SAAStE,MAAMuE,MAEpB,KAAhBF,GAKJjC,EAAgB,CAAEpC,MAAOqE,IAEzBF,EAAKK,SANDjB,GAOP,EAiCWvD,MAAOA,IAIY,IAAlBa,EAAO+B,QACF,SAAC,EAAD,KACA,SAAC6B,EAAA,EAAD,CAAS5D,OAAQA,MAItC,C,mMCjGM,SAAe6D,IAAtB,4CAAO,OAAP,oBAAO,6GAEwBC,EAAAA,EAAAA,IAAA,sBAFxB,UAGyB,OADlBC,EAFP,QAGcC,OAHd,yCAIYD,EAASnC,MAJrB,uDAOCS,QAAQC,IAAI,KAAM2B,SAPnB,gFAWA,SAAetC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCuC,GAAlC,gGAEwBJ,EAAAA,EAAAA,IAAA,8BAAiCI,IAFzD,UAGyB,OADlBH,EAFP,QAGcC,OAHd,yCAIYD,EAASnC,MAJrB,uDAOCS,QAAQC,IAAI,KAAM2B,SAPnB,gFAWA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCjE,GAAjC,gGAEwB4D,EAAAA,EAAAA,IAAA,iBAAoB5D,IAF5C,UAGyB,OADlB6D,EAFP,QAGcC,OAHd,yCAIYD,EAASnC,MAJrB,uDAOCS,QAAQC,IAAI,KAAM2B,SAPnB,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BlE,GAA9B,gGAEwB4D,EAAAA,EAAAA,IAAA,iBAAoB5D,EAApB,aAFxB,UAGyB,OADlB6D,EAFP,QAGcC,OAHd,yCAIYD,EAASnC,MAJrB,uDAOCS,QAAQC,IAAI,KAAM2B,SAPnB,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCnE,GAAjC,gGAEwB4D,EAAAA,EAAAA,IAAA,iBAAoB5D,EAApB,aAFxB,UAGyB,OADlB6D,EAFP,QAGcC,OAHd,yCAIYD,EAASnC,MAJrB,uDAOCS,QAAQC,IAAI,KAAM2B,SAPnB,gFA/CPH,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEQ,QAFV,mC","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/Gallery/Gallery.styled.js","components/Gallery/Gallery.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/DefaultImg/DefaultMoviesPageImg.styled.js","components/DefaultImg/DefaultMoviesPageImg.jsx","pages/Movies.styled.js","pages/Movies.jsx","services/movies-api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const CardLink = styled(Link)`\n    text-decoration: none;\n    color: #446381;\n` \n\nexport const Card = styled.div`\n    width: 325px;\n    height: 600px;\n    cursor: pointer;\n    border: 3px solid #FFC5B3;\n    background-color: #C37A87;\n    max-width: calc((100% - 3 * 30px) / 4);\n\n    &:hover,\n    &:focus {\n        transform: scale(1.015);\n    }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    max-width: 100%;\n    height: 490px;\n    background-size: cover;\n\n`;\n\nexport const CardMovieInfo = styled.div`\n    padding: 8px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n`;\n\nexport const Title = styled.p`\n    margin-top: 0;\n    margin-bottom: 12px;\n    font-size: 24px;\n    color: #FFFFFF;\n`;\n\nexport const Rating = styled.p`\n    margin: 0;\n    font-size: 20px;\n    color: #446381;\n`;\n\n","import { CardLink, Card, Image, CardMovieInfo, Title, Rating } from \"./MovieCard.styled\";\nimport { Outlet, useLocation} from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport PropTypes from 'prop-types';\nimport defaulMovieImage from '../../images/default-movie.jpg';\n\nconst MovieCard = ({ movieId, src, title, rating }) => {\n    const movieImg = `https://image.tmdb.org/t/p/w500${src}` ?? '/src/default.jpg';\n    const location = useLocation();\n\n    return (\n        <Card>\n            <CardLink to={`/movies/${movieId}`} state={{ from: location }} >\n                <Image src={\n                    src\n                        ? movieImg\n                        : defaulMovieImage\n                }\n                    alt={title} />\n                <CardMovieInfo>\n                    <Title>{title}</Title>\n                    <Rating>Rating: {rating}</Rating>\n                </CardMovieInfo>\n            </CardLink>\n            <Suspense fallback={<div>Loading page...</div>}>\n                <Outlet />\n            </Suspense>\n        </Card>\n    )\n};\n\nMovieCard.propTypes = {\n    movieId: PropTypes.number.isRequired,\n    src: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n};\n\n\nexport default MovieCard;","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    max-width: 1400px;\n    margin: auto;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 24px;\n`;","import MovieCard from \"components/MovieCard/MovieCard\";\nimport { List } from \"./Gallery.styled\";\nimport PropTypes from 'prop-types';\n\n\nconst Gallery = ({ movies }) => {\n    return (\n        <List> \n            {\n                movies.map(({ id, original_language, title, vote_average, poster_path, release_date }) => \n                    <MovieCard\n                        key={id}\n                        movieId={id}\n                        src={poster_path}\n                        title={title}\n                        language={original_language}\n                        rating={vote_average}\n                        release={release_date}\n                    />\n                )\n            }\n        </List>\n    )\n};\n\nGallery.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            original_language: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            vote_average: PropTypes.number.isRequired,\n            poster_path: PropTypes.string,\n            release_date: PropTypes.string.isRequired,\n        })\n    ),\n};\n\nexport default Gallery;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    margin-bottom: 40px; \n`;\n\nexport const Form = styled.form`\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    border: 1px solid #EB8382;\n`;\n\nexport const SearchInput = styled.input`\n    width: 400px;\n    margin-top: 0; \n    height: 30px;\n    font-size: 24px;\n    color: #446381;\n    padding: 8px;\n    background-color: #FEF1E9;\n    border: none;\n`;\n\nexport const SearchFormButton = styled.button`\n    display: inline-block;\n    background-color: #EAAC8B;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    \n    &:hover {\n        opacity: 1;\n    }\n`;","import { FcSearch } from \"react-icons/fc\";\nimport { Container, Form, SearchInput, SearchFormButton } from \"./SearchForm.styled\";\n\nconst SearchForm = ({ onSubmit }) => {\n    return (\n        <Container>\n            <Form onSubmit={onSubmit}>\n                <SearchInput\n                    type=\"text\"\n                    name=\"title\"\n                />\n                <SearchFormButton type=\"submit\">\n                    <FcSearch size={32}/>\n                </SearchFormButton>\n            </Form>\n        </Container>\n        \n    )\n}\n\nexport default SearchForm;","import styled from \"styled-components\";\n\nexport const Container = styled.section`\n    // margin-left: auto;\n    // margin-right: auto;\n`;\n\nexport const Image = styled.img`\n    width: 600px;\n    margin-left: auto;\n    margin-right: auto;\n`;","import defaultImg from '../../images/default-img.png';\nimport { Container, Image } from 'components/DefaultImg/DefaultMoviesPageImg.styled';\n\nconst DefaultMoviesPageImg = () => {\n    return (\n        <Container>\n            <Image src={defaultImg} alt=\"background\" />\n        </Container>\n        \n    )\n};\n\nexport default DefaultMoviesPageImg;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.main`\n    margin-left: auto;\n    margin-right: auto;\n    min-height: 900px;\n`;","import { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\nimport DefaultMoviesPageImg from \"components/DefaultImg/DefaultMoviesPageImg\";\nimport Gallery from \"components/Gallery/Gallery\";\nimport { fetchMoviesByQuery } from \"services/movies-api\";\nimport { toast } from 'react-toastify';\nimport { Wrapper } from \"./Movies.styled\";\n\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const title = (searchParams.get(\"title\") ?? \"\").trim();\n\n    useEffect(() => {\n        if (title === '') return;\n        setMovies([]);\n\n        async function getMovies(title) {\n            try {\n                const data = await fetchMoviesByQuery(title);\n                const foundMovies = data.results;\n                \n                if (foundMovies.length === 0) {\n                    onNoAnswer();\n                    return;\n                }\n\n                const sortedMovies = foundMovies.sort((firstMovie, secondMovie) =>\n                    secondMovie.vote_average - firstMovie.vote_average\n                );\n\n                setMovies(sortedMovies);\n            } catch (error) {\n                console.log(error);\n                toast.error('No results found', { duration: 3000 });\n            }\n        }\n\n        getMovies(title);\n\n\n    }, [title])\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const form = e.currentTarget;\n        const searchQuery = form.elements.title.value;\n\n        if (searchQuery === \"\") {\n            onEmptyQuery();\n            return;\n        }\n\n        setSearchParams({ title: searchQuery });\n\n        form.reset();\n    }\n\n    const onEmptyQuery = () => {\n        toast('Please enter a search query', {\n            position: \"top-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n        });\n    };\n\n    const onNoAnswer = () => {\n        toast(\"Unfortunately we found nothing. Let's try something else!\", {\n            position: \"top-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n        });\n    }\n\n\n    return (\n        <Wrapper>\n            <SearchForm\n                onSubmit={handleSubmit}\n                title={title}\n            />\n\n            {\n                (movies.length === 0)\n                    ? <DefaultMoviesPageImg />\n                    : <Gallery movies={movies}/>\n            }\n        </Wrapper>\n    )\n}\n\nexport default Movies;","import axios from \"axios\";\n\nconst API_KEY = '0feaca93847c0f717b0c2876a0a51030';\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function fetchTrandingMovies() {\n    try {\n        const response = await axios.get(`trending/movie/day`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMoviesByQuery(query) {\n    try {\n        const response = await axios.get(`/search/movie?query=${query}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieDetails(id) {\n    try {\n        const response = await axios.get(`/movie/${id}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieCast(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/credits`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieReviews(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}"],"names":["CardLink","styled","Link","Card","Image","CardMovieInfo","Title","Rating","movieId","src","title","rating","movieImg","location","useLocation","to","state","from","defaulMovieImage","alt","Suspense","fallback","List","movies","map","id","original_language","vote_average","poster_path","release_date","language","release","Container","Form","SearchInput","SearchFormButton","onSubmit","type","name","size","defaultImg","Wrapper","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","trim","useEffect","fetchMoviesByQuery","data","foundMovies","results","length","onNoAnswer","sortedMovies","sort","firstMovie","secondMovie","console","log","toast","duration","getMovies","onEmptyQuery","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","e","preventDefault","form","currentTarget","searchQuery","elements","value","reset","Gallery","fetchTrandingMovies","axios","response","status","message","query","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","api_key"],"sourceRoot":""}