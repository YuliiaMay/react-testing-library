{"version":3,"file":"static/js/33.3c31b6e4.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import { NavLink, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Wrapper = styled.main`\n    margin: auto;\n    margin-top: 40px;\n    margin-botton: 40px;\n    width: 1250px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\nexport const Container = styled.section`\n    display: flex;\n    flex-direction: row;\n    gap: 36px;\n    border: 2px solid #EB8382;\n    padding: 40px;\n\n`;\n\nexport const Image = styled.img`\n    max-height: 600px;\n`;\n\nexport const MovieInfo = styled.div`\n    color: #826F8C;\n    font-size: 24px;\n    \n`;\n\nexport const MovieTitle = styled.h1`\n    margin: 0;\n    font-size: 40px;\n    color: #414141;\n    margin-bottom: 48px; \n`;\n\nexport const ReleaseDate = styled.span`\n    // color: #446381;\n`;\n\nexport const Score = styled.p`\n    margin-bottom: 32px; \n`;\n\nexport const Subtitle = styled.h2`\n    margin-bottom: 24px; \n    font-size: 36px;\n    color: #446381;\n`;\n\nexport const Overview = styled.p`\n    margin-bottom: 32px; \n`;\n\nexport const Genres = styled.ul`\n    // margin-bottom: 24px; \n    // font-size: 36px;\n    // color: #446381;\n    display: flex;\n    flex-direction: row;\n    gap: 24px;\n`;\n\nexport const GenresItem = styled.li`\n    background-color: #EB8382;\n    padding: 8px;\n    border-radius: 20px;\n`;\n\nexport const Genre = styled.span`\n    color: #fff;\n`;\n\nexport const AdditionalContainer = styled.section`\n    width: 1250px;\n    border-bottom: 2px solid #EB8382;\n    // border-left: 2px solid #EB8382;\n    // border-right: 2px solid #EB8382;\n    padding-top: 40px;\n    padding-bottom: 40px;\n    color: #826F8C;\n    font-size: 24px;\n`;\n\nexport const InfoList = styled.ul`\n    display: flex;\n    flex-direction: row;\n    gap: 36px;\n`;\n\nexport const InfoItem = styled.li`\n    background-color: #transparant;\n    border-radius: 20px;\n    border: 2px solid #fff;\n    padding: 8px;\n    color: #414141;\n\n    &:hover,\n    &:focus {\n        border: 1px solid #fff;\n        background-color: #EB8382;\n        color: #fff;\n    }\n`;\n\n\nexport const StyledNavLink = styled(NavLink)`\n    &.active {\n        color: #EB8382;\n    }\n`;\n\nexport const GoBackLink = styled(Link)`\n    color: #826F8C;\n    font-size: 24px;\n    margin-bottom: 32px; \n    width: 120px;\n    text-align: center;\n    border-radius: 20px;\n    border: 2px solid #fff;\n    background-color: transparant; \n\n\n    &:hover,\n    &:focus {\n        color: #EB8382;\n        background-color: #fff; \n        border: 2px solid #EB8382;\n    }\n\n`\n\n\n\n\n","import { useState, useEffect, useRef, Suspense } from \"react\";\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { fetchMovieDetails } from \"services/movies-api\";\nimport { Wrapper, Container, Image, MovieTitle, MovieInfo, ReleaseDate, Score, Subtitle, Overview, Genres, GenresItem, Genre, AdditionalContainer, InfoList, InfoItem, StyledNavLink, GoBackLink } from \"./MovieDetails.styled\";\nimport defaulMovieImage from '../../images/default-movie.jpg';\nimport Loader from \"components/Loader/Loader\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState({});\n    const [genres, setGenres] = useState([]);\n    const location = useLocation();\n    const backLinkHref = useRef(location.state?.from ?? '/');\n\n\n    useEffect(() => {\n        async function getMovie(movieId) {\n            const movie = await fetchMovieDetails(movieId);\n            setMovie(movie);\n            setGenres(movie.genres)\n        }\n        getMovie(movieId);\n    }, [movieId]);\n\n    return (\n        \n            movieId && (\n                <Wrapper>\n                    <GoBackLink to={backLinkHref.current}>Go Back\n                    </GoBackLink>\n                    <Container>\n                        <Image src={\n                            movie.poster_path\n                            ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                            : defaulMovieImage}\n                            alt={movie.original_title} />\n                        <MovieInfo>\n                            <MovieTitle>\n                                <span>{movie.original_title}</span>\n                                <ReleaseDate>   ({movie.release_date && movie.release_date.slice(0, 4)})  </ReleaseDate>\n                            </MovieTitle>\n                            <Score>User Score - {movie.vote_average}</Score>\n                            <div>\n                                <Subtitle>Overview</Subtitle>\n                                <Overview>{movie.overview}</Overview>\n                            </div>\n                            <div>\n                                <Subtitle>Genres</Subtitle>\n                                <Genres>\n                                    {\n                                        genres.map(({id, name}) =>\n                                            <GenresItem key={id}>\n                                                <Genre>{name}</Genre>\n                                            </GenresItem>\n                                        )\n                                    }\n                                </Genres>\n                            </div>\n                        </MovieInfo>\n                    </Container>\n                    <AdditionalContainer>\n                        <Subtitle>Additional information</Subtitle>\n                        <InfoList>\n                            <InfoItem><StyledNavLink to=\"cast\" >Cast</StyledNavLink></InfoItem>\n                            <InfoItem><StyledNavLink to=\"reviews\">Review</StyledNavLink></InfoItem>\n                    </InfoList>\n                    </AdditionalContainer>\n                    <Suspense fallback={<Loader />}>\n                        <Outlet />\n                    </Suspense>\n                </Wrapper>\n            )\n        \n        \n    )\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst API_KEY = '0feaca93847c0f717b0c2876a0a51030';\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function fetchTrandingMovies() {\n    try {\n        const response = await axios.get(`trending/movie/day`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMoviesByQuery(query) {\n    try {\n        const response = await axios.get(`/search/movie?query=${query}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieDetails(id) {\n    try {\n        const response = await axios.get(`/movie/${id}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieCast(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/credits`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieReviews(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}"],"names":["Wrapper","styled","Container","Image","MovieInfo","MovieTitle","ReleaseDate","Score","Subtitle","Overview","Genres","GenresItem","Genre","AdditionalContainer","InfoList","InfoItem","StyledNavLink","NavLink","GoBackLink","Link","movieId","useParams","useState","movie","setMovie","genres","setGenres","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchMovieDetails","getMovie","to","current","src","poster_path","defaulMovieImage","alt","original_title","release_date","slice","vote_average","overview","map","id","name","Suspense","fallback","Loader","fetchTrandingMovies","axios","response","status","data","console","log","message","fetchMoviesByQuery","query","fetchMovieCast","fetchMovieReviews","api_key"],"sourceRoot":""}